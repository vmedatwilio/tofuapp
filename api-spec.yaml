openapi: 3.0.0
info:
  version: 1.0.0
  title: Heroku-Salesforce API
  description: Example Heroku app as an API using Salesforce SDK.
servers:
  - url: http://127.0.0.1:300
paths:
  /accounts:
    get:
      operationId: GetAccounts,
      description: Returns list of array of Accounts
      responses:
        '200':
          description: Successfully returned a list of Accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/DeveloperError'
        '503':
          $ref: '#/components/responses/UnknownError'
  /activities:
    post:
      operationId: GetActivities
      description: Returns all activities (tasks/events) for a given account for the last 4 years.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                  description: The Salesforce Account ID to fetch activities for.
              required:
                - accountId
      responses:
        '200':
          description: Successfully retrieved activities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    subject:
                      type: string
                    activityDate:
                      type: string
                      format: date
                    status:
                      type: string
                    type:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/DeveloperError'
        '503':
          $ref: '#/components/responses/UnknownError'
  /unitofwork:
    post:
      operationId: UnitOfWork
      description:
        Receives a payload containing Account, Contact, and Case details and uses the
        Unit of Work pattern to assign the corresponding values to to its Record
        while maintaining the relationships. It then commits the unit of work and
        returns the Record Id's for each object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountName:
                  type: string
                lastName:
                  type: string
                subject:
                  type: string
                callbackUrl:
                  type: string
      responses:
        '201':
          description: Received UnitOfWork API request
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/DeveloperError'
        '503':
          $ref: '#/components/responses/UnknownError'
      callbacks:
        unitOfWorkResponse:
          '{$request.body#/callbackUrl}':
            post:
              description: Response from /unitofwork API
              operationId: unitOfWorkResponseCallback
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        accountId:
                          type: string
                        contactId:
                          type: string
                        cases:
                          type: object
                          properties:
                            serviceCaseId:
                              type: string
                            followupCaseId:
                              type: string
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
  /activitysummarygeneration:
    post:
      operationId: ActivitySummaryGeneration
      description:
        Receives a payload containing AccountId and uses to fetch the all activites of the account
        and summarise the activites and break down into Monthly and Quarterly.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                callbackUrl:
                  type: string
      responses:
        '201':
          description: Received ActivitySummaryGeneration API request
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/DeveloperError'
        '503':
          $ref: '#/components/responses/UnknownError'
      callbacks:
        activitySummaryResponse:
          '{$request.body#/callbackUrl}':
            post:
              description: Response from /ActivitySummaryGeneration API
              operationId: activitySummaryResponseCallback
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        summaryDetails:
                          type: string
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback                               
  /asynchactivitysummarygeneration:
    post:
      operationId: AsynchActivitySummaryGeneration
      description:
        Receives a payload containing AccountId and uses to fetch the all activites of the account
        and summarise the activites and break down into Monthly and Quarterly.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                queryText:
                  type: string
                assisstantPrompt:
                  type: string
                userPrompt:
                  type: string   
                callbackUrl:
                  type: string
      responses:
        '201':
          description: Received ActivitySummaryGeneration API request
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/DeveloperError'
        '503':
          $ref: '#/components/responses/UnknownError'
      callbacks:
        asynchActivitySummaryResponse:
          '{$request.body#/callbackUrl}':
            post:
              description: Response from /ActivitySummaryGeneration API
              operationId: asynchActivitySummaryResponseCallback
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        summaryDetails:
                          type: string
              responses:   # Expected responses to the callback message
                '200':
                  description: Your server returns this code if it accepts the callback
components:
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DeveloperError:
      description: DeveloperError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownError:
      description: UnknownError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    # Schema for error response body
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
